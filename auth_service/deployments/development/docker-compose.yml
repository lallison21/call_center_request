services:
  auth_service:
    container_name: auth_service
    env_file:
      - .env
    build:
      context: ../..
      dockerfile: ./cmd/auth_service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - development

  migration:
    image: migrate/migrate
    env_file:
      - .env
    profiles: [ "tools" ]
    volumes:
      - ../../migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"
      ]
    command: [ "up", "down" ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - development

  postgres:
    image: postgres
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5431:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - development

networks:
  development:
    driver: bridge
